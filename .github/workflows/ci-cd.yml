name: CI/CD pipeline
on:
  push:
    branches: [main]
    paths-ignore:
        - 
  pull_request:
    branches: [main]

jobs:
    test:
      name: Unit Testing
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code             
          uses: actions/checkout@v4

        - name: Set Node.js                       #instaling node js and dependencies to run the application
          uses: actions/setup-node@v4
          with:
            node-version: '20'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci
        
        - name: Run tests
          run: npm test || echo "Tests failed, but continuing to deploy"

    lint:
      name: Static Code Analysis
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Run ESLint
          run: npm run lint

    build:
      name: Build application
      runs-on: ubuntu-latest
      needs: [test, lint]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Build application
          run: npm run build

        - name: upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: build-artifacts
            path: dist/



    docker:
        name: Docker Build and Push
        runs-on: ubuntu-latest
        needs: [build]
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
        outputs:
            image_tag: ${{ steps.set_output.outputs.image_tag }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
                  
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                      name: build-artifacts
                      path: dist/
                  
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
                  
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3 
              with:
                      registry: ${{ env.REGISTRY }}
                      username: ${{ github.actor }}
                      password: ${{ secrets.TOKEN }}
                  
            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                      images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                      tags: |
                        type=sha,format=long
                        type=ref,event=branch
                        latest
                  
            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                      context: .
                      push: false
                      tags: ${{ steps.meta.outputs.tags }}
                      labels: ${{ steps.meta.outputs.labels }}
                      load: true
                  
            - name: Push Docker image
              uses: docker/build-push-action@v5
              with:
                      context: .
                      push: true
                      tags: ${{ steps.meta.outputs.tags }}
                      labels: ${{ steps.meta.outputs.labels }}
                  
            - name: Set image tag output
              id: set_output
              run: echo "image_tag=$(echo '${{ github.sha }}' | cut -c1-7)" >> $GITHUB_OUTPUT
         